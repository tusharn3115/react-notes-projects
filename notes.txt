- React nai hme ik syntax diya hai, ki ik function lo usmai html return krodo or react us function ke under return kiya gya html tags and all ko render krwa dega

- now if you will try to pass 2 tags in the function in react it will give us and error because in react we can only pass one tags, so react said you can inclose the other tags into a <div> tag but it was a common problem in react inclosing tags into div again and again, so react allow us to enclose these tags into a empty tag also called fragment.

Eg:- 
function App(){  
    return(
        <>  ----> this empty tag is called fragment
        <h1>Heading 1</h1>
        <p>Paragraph</p>
        ...and other tags
        </>
    )
}

- The name of the function's first letter should be capital else the code will give us an error 







// understanding react ------------------------------------------------------------------------

--- Custom Render 

* hmne custom_react folder mai sikne ki koshish kri ki react kese elements ko create krta hai
1. hmne ik mainContainer bnaya jismai querySelector se tag ko uthaya where we will inject the code 

2. hmne ik khud ka customRender bnaya jismai we select mainContainer and reactElement 

3. reactElement object mai hmne anpa syntax define kna ki phele tag ayega then attributes and then text

4. then hmne customRender function mai sabhi tags, attribute and text ko import and set krna 

5. then customRender mai arguments pass kreke browser per render krwaya

- then hmne dekha ki app.jsx sirf ik method hai toh kya hm main.jsx mai method likh skte hai, and yes we ca write methods in main.jsx and can render it 

- hmne dekha ki hm jo methods bnate hai and react us method ko tree structure/ object bnati hai or usko inject krti hai

- to hm apna element jo bhi toh inject krskte hai but it was not working 

- but then we create a variable and usmai pura HTML pass krta hu then it works this mean khud ki bnai key react nhi smjhta its has set ot rules and syntax to follow 

- to create an element react gives us React.createElement() method which is by default injected by transpiler called Babel

- so here we see how to create a react element in which first parameter is expected a html tag, second param is object and third is direct text and the last comes the variable injections




// Hooks -----------------------------------------------------------------------

- Hooks allow function components to have access to state and other React features

- one of the hooks is useState()

- this hook is resposible for changing state and these changes are propogated into our UI or DOM

- useState give us two things in form of an array first is counter(can be name as per needed) and second is function





// useState() ---------------------------------------------------------------------






// Understanding createRoot() method ------------------------------------------------------------------

- createRoot() method behind the scene create a DOM like structure just like our browser have a DOM

- now why it needs to create another DOM of it self, its because it compares the React DOM and the Browser DOM and update only those things which are updated in the UI

- but what browser does is, it remove the whole DOM tree and create a new DOM with the updates in the UI, thats why our page reloads


VIRTUAL DOM - what virtual DOM does is, with its help we can keep track of our whole virtual DOM in tree like structure and only those value which are changes are only removed and is updated not the entire DOM






// React FIBER ---------------------------------------------------------------------------------

- Fiber is the new reconciliation engine introduced in React to improve rendering performance.

- It breaks the rendering work into small units and spreads them over multiple frames, preventing UI blocking.

- Why? It helps React smoothly manage large, complex UIs and updates without freezing the user interface.

- react phele ftafat immidiately sabh kuch update krdeta tha jiseh react ke animations hit hote the i.e jese ik element update hone wala tha per ik dum seh dusra element updation ke liye agya fir tisra element bhi agya, so teeno ko update krne se acha sabko ik sath final upadate krdo





// Reconciliation ------------------------------------------------------------------------------

- Reconciliation is the process React uses to update the UI efficiently when changes occur in the app.

- React compares the new virtual DOM with the old one, figuring out the differences (called "diffing").

- It then updates only the parts of the real DOM that have changed, making the process faster and less costly.


 


// props --------------------------------------------------------------------------------------

- props components ko reusable bnata hai

- for example: We have made a card and we can keep that card into a component and can reuse it whenever needed

- so you have made the component of card and now you can make as many copyies, but the problem is if you need every card should have different details, there comes the work of props 

- we can pass values from one component to other component and if i want to access the value i can access it with the help of prop which i have to declare as a parameter in the card compoment function






// useCallback -----------------------------------------------------------------------------------

- useCallback is a React Hook that lets you cache(memory) a function defination between re-renders

- it needs two parameters useCallback(function, dependencies)





// useEffect -----------------------------------------------------------------------



// useRef ---------------------------------------------------------------------------

- useRef is a React Hook that lets you reference a value thatâ€™s not needed for rendering.


- syntax :

const ref = useRef(initialValue)





// react-router-dom ----------------------------------------------------------------

 Link - Link in react router dom represents <a></a> tag, is <a></a> tag our browser refreshes the whole page but i react we done have the concept of react i.e the whole DOM is not create again only the places where changes are made is changed so no refresh happens, thats why we use Link in react router DOM.


NavLink - it provides some additional feature such as 



1. Outlet :

- It acts as a placeholder where the child routes will be displayed.

- When you're setting up a layout with multiple pages and want some common elements (like a header or sidebar) to stay consistent across different views, Outlet comes into play to display the specific content for each route.

- top level per hm layout ya fir root ko rkhte hai then uske niche child routes ate hai

- how to make a router, we need a RouterProvider jo ki ik wrapper hai jiske under sare hm router dete hai jo hmne bnaya hai and uske under jitne bhi routes hai unko wrap krta hai

- we can make router using createBrowserRouter() method to make router, ya to hm uus method ke under array create krke then us array ke under methods bna kr ya fir createBrowserRouter() method ke under createRouterFromElement() method use krke then uske under routes dekr bna skte hai


2. Api call :

- we can call an api by using useEffect function

- and we can also call an api using loader from react router 






User Context ------------------------------------------------------------------

- Context API allows you to manage global state and share data between components without passing props down manually at every level.

- abh jese hmne context bnaya to context hme major chij deta hai jisko bolte hai provider and hm isko aas a wrapper use krengay 

- jese hmne usecontext ke under components ko wrap krwa diya to ab ye bn jayega provider

- provider se mtlb jo bhi component usercontext ke under hai unko global usercontext ka access miljayega

- context ik global variable hai

- or iske under jitne bhi component hai jo usercontext ke thorough koi bhi state ka access le skte hai